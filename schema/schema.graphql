type User {
  id: ID!
  name: String!
  organizedEvents: [Event!]!
  participatingEvents: [Event!]!
}

type DateRange {
    start: String!
    end: String!
}

type Event {
  id: ID!
  title: String!
  dateRange: DateRange!
  organizer: User!
  participants: [User!]!
}

type Query {
  me: User
  users: [User!]!
  events: [Event!]!
}

fragment UserInfo on User {
  id
  name
}

type Mutation {
  login(name: String!): String

  createUser(name: String!): User!
  createEvent(title: String!, start: String!, end: String!): Event!

  updateUser(id: ID!, name: String!): User!
  updateEvent(id: ID!, title: String, start: String, end: String): Event!

  deleteUser(id: ID!): Boolean!
  deleteEvent(id: ID!): Boolean!
}
